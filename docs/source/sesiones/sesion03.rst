Misi√≥n 03: Galaxias üåå
===================================

En la misi√≥n anterior aprendimos a usar funciones, crear variables y a usar las variables en expresiones. 

Ahora, vamos a aprovechar este conocimiento para crear funciones. Una :term:`funci√≥n` es un grupo de comandos que le damos a la computadora. 

.. figure:: ../img/sesion03/ordenes.jpeg
    :scale: 50%
    :figclass: align-center
    :alt: ordenes

Ya hemos usado funciones, por ejemplo, la funci√≥n :py:func:`arcade.draw_line()` o la funci√≥n :py:func:`arcade.Text()`. Ahora vamos a aprender a crear nuestras propias funciones.

Funci√≥n basica
------------------

.. code-block:: python
   :caption: Ejemplo de funci√≥n

    def dibujar_estrella():
        """ Esta funci√≥n dibuja una estrella en la pantalla. """

        # Rayos de luz
        # Horizontal, de izquierda (400, 450) a derecha (500, 450)
        arcade.draw_line(400, 450, 500, 450, arcade.color.HELIOTROPE, 1)

Para escribir una funci√≥n:

#. Comienza con la palabra clave def, que es la abreviatura de ‚Äúdefine‚Äù.
#. A continuaci√≥n, dale un nombre a la funci√≥n. 

    .. warning::
        Los nombres de funciones siguen las mismas reglas que los nombres de variables. Deben:

            1. Comenzar con una letra min√∫scula. (O en casos especiales, un gui√≥n bajo).
            2. Despu√©s de la primera letra, solo usa letras, n√∫meros y guiones bajos.
            3. No se permiten espacios. Usa guiones bajos en su lugar.
            4. Si bien se pueden usar letras may√∫sculas, los nombres de las funciones normalmente son todos en min√∫sculas.

#. Despu√©s de eso, tenemos un par de par√©ntesis. Dentro de los par√©ntesis ir√°n los par√°metros. Los explicaremos en breve.
#. A continuaci√≥n, dos puntos.
#. 

