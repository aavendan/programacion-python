Estrellas ‚ú® y Planetas ü™ê
===================================

Sistema de coordenadas
------------------

Hemos aprendido a especificar el color de lo que queremos dibujar, lo 
siguiente que necesitamos aprender es c√≥mo ubicarlos. En tus clases 
de matem√°ticas, probablemente has aprendido sobre el sistema de 
coordenadas cartesiano, que se ve as√≠:

.. image:: ../img/cartesian_coordinate_system.svg
  :width: 400
  :alt: Sistema de coordenadas

Fuente: `Wikipedia: Cartesian coordinate system <https://commons.wikimedia.org/wiki/File:Cartesian_coordinate_system_(comma).svg>`_

Nuestros gr√°ficos se dibujar√°n usando este mismo sistema. Pero 
debemos tener en cuenta:

1. Solo dibujaremos en el cuadrante superior derecho (Cuadrante I). 
Por lo tanto, el punto 0,0 estar√° en la esquina inferior izquierda 
de la pantalla, y todas las coordenadas negativas estar√°n fuera de 
la pantalla.

2. Cada punto es un :term:`p√≠xel`. As√≠ que tu ventana tiene 600 
p√≠xeles de ancho. 

.. warning::

  Recuerda que los p√≠xeles se cuentan desde el cero (0). El cero es uno 
  de los p√≠xeles, por lo que van desde el 0 hasta el 599 (600) p√≠xeles.

De l√≠neas a estrellas
------------------

Para dibujar una l√≠nea, se utiliza con la funci√≥n :py:func:`arcade.draw_line()` 
con los siguientes par√°metros:

1. La coordenada del punto inicial (posici√≥n en X, posici√≥n en Y), 
2. La coordenada del punto final (posici√≥n en X, posici√≥n en Y),
3. El color de la l√≠nea, y
4. El ancho de la l√≠nea. 

En nuestra imagen de ejemplo, usaremos varias l√≠neas para dibujar 
rayos de una estrella:

.. code-block:: python
    :emphasize-lines: 8-12, 14-17

    ...

    # Inicio del dibujo
    ...

    # (Aqu√≠ ir√° el c√≥digo para dibujar)

    # Rayos de luz
    # Horizontal, de izquierda (400, 450) a derecha (500, 450)
    arcade.draw_line(400, 450, 500, 450, arcade.color.HELIOTROPE, 1)
    # Vertical, de arriba (450, 500) a abajo (450, 400)
    arcade.draw_line(450, 500, 450, 400, arcade.color.HELIOTROPE, 1)

    # Abajo a la izquierda (425, 425) hacia arriba la derecha (475, 475)
    arcade.draw_line(425, 425, 475, 475, arcade.color.HELIOTROPE, 3)
    # Arriba a la izquierda (425, 475) hacia abajo la derecha (475, 425)
    arcade.draw_line(425, 475, 475, 425, arcade.color.HELIOTROPE, 3)

    # Fin del dibujo
    ...

.. rubric:: Reto
  :heading-level: 2

Ahora, crea tu propia estrella dentro de la ventana, tomando como centro 
el punto (100,100).

.. important::
  
  Recuerda escoger el tama√±o, el grosor y el color de las l√≠neas 
  en la estrella.


De c√≠rculos a planetas
------------------

Para dibujar un c√≠rculo, se utiliza con la funci√≥n 
:py:func:`arcade.draw_circle_filled()` con los siguientes par√°metros:

1. La coordenada del centro (posici√≥n en X, posici√≥n en Y), 
2. El radio del c√≠rculo,
3. El color de la l√≠nea. 

En nuestra imagen de ejemplo, usaremos un c√≠rculo para dibujar un planeta:

.. code-block:: python
    :emphasize-lines: 6,7

    ...

    # Inicio del dibujo
    ...

    # Planeta	
    arcade.draw_circle_filled(100, 350, 30, arcade.color.arcade.csscolor.DARK_VIOLET))

    # Fin del dibujo
    ...

.. note::

    Puedes consultar los nombres en la 
    tabla de colores de 
    `arcade.csscolor package <https://api.arcade.academy/en/latest/api_docs/arcade.csscolor.html>`_.
    para especificar colores por nombre (por 
    ejemplo `arcade.csscolor.PURPLE_MOUNTAIN_MAJESTY`), 

De c√≠rculos a cr√°teres
------------------

En nuestra imagen de ejemplo, usaremos varios c√≠rculos para dibujar los 
cr√°teres en el planeta al sobreponer c√≠rculos de diferentes formas y colores:

.. code-block:: python
    :emphasize-lines: 9-12

    ...

    # Inicio del dibujo
    ...

    # Planeta	
    arcade.draw_circle_filled(100, 350, 30, arcade.csscolor.DARK_VIOLET)

    # Cr√°teres del planeta
    arcade.draw_circle_filled(90, 360, 5, arcade.csscolor.DARK_SLATE_GRAY)
    arcade.draw_circle_filled(110, 355, 4, arcade.csscolor.DARK_SLATE_GRAY)
    arcade.draw_circle_filled(95, 340, 3, arcade.csscolor.DARK_SLATE_GRAY)

    # Fin del dibujo
    ...

.. rubric:: Reto
  :heading-level: 2

Ahora, crea tu propio planeta dentro de la ventana, tomando como centro 
el punto (150,30).

.. important::
  
  Recuerda escoger colocar varios cr√°cteres en el planeta.

Otras formas
------------------